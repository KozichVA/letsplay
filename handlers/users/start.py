from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message

from keyboards import main_panel
from keyboards.reply import main_panel_admin, main_panel, main_panel_master
from utils.models import User

# from utils.models import User

start_router = Router(name='start')


@start_router.message(CommandStart())
async def command_start(message: Message):
    await message.delete()
    user = await User.get(pk=message.from_user.id)
    if not user:
        user = User(id=message.from_user.id, role_id=2)
        await user.save()
    # user = User(id=message.from_user.id)
    # try:
    #     await user.save()
    # except IntegrityError:
    #     text = f'–î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å! {message.from_user.full_name}, —á—Ç–æ —Ç—ã –æ—Ç –º–µ–Ω—è —Ö–æ—á–µ—à—å?'
    # else:
    #     text = f'{message.from_user.full_name}, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –∫–ª—É–±–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏ —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä: \"Let\'s play\".' \
    #            f'–Ø –º–æ–≥—É –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Ç–µ–±—è —Å –Ω–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –∏–≥—Ä, –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –∏–≥—Ä—É.' \
    #            f'–ü–æ–º–æ–≥—É –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–µ, –¥–ª—è —Ç–≤–æ–µ–π –≤–µ—á–µ—Ä–Ω–∏–∫–∏ –∏–ª–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è'
    text = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @{message.from_user.full_name} üòç\n' \
           f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –∫–ª—É–±–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏ —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä - \n\"***Let‚Äôs play***\"!  \n' \
           f'–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –º—ã —Å–æ–±–∏—Ä–∞–µ–º—Å—è, —á—Ç–æ–±—ã –∫–ª–∞—Å—Å–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è! ü•≥'
    if user.role_id == 1:
        await message.answer(text=text, parse_mode='Markdown', reply_markup=main_panel_admin)
    elif user.role_id == 3:
        await message.answer(text=text, reply_markup=main_panel_master)
    else:
        await message.answer(text=text, reply_markup=main_panel)
