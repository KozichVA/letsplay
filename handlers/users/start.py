from aiogram import Router
from aiogram.filters import CommandStart
from aiogram.types import Message

from keyboards.inline.main_panel_keyboards import admin_start_panel, master_start_panel, user_start_panel
from keyboards.reply import main_panel_admin, main_panel, main_panel_master
from utils.models import User

start_router = Router(name='start')


@start_router.message(CommandStart())
async def command_start(message: Message):
    await message.delete()
    user = await User.get(pk=message.from_user.id)
    if not user:
        user = User(id=message.from_user.id, role_id=2)
        await user.save()

    text = f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, @{message.from_user.full_name} üòç\n' \
           f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è –≤ –∫–ª—É–±–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã—Ö –∏ —Ä–æ–ª–µ–≤—ã—Ö –∏–≥—Ä - \n\"***Let‚Äôs play***\"!  \n' \
           f'–ö–∞–∂–¥—É—é –Ω–µ–¥–µ–ª—é –º—ã —Å–æ–±–∏—Ä–∞–µ–º—Å—è, —á—Ç–æ–±—ã –∫–ª–∞—Å—Å–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è! ü•≥'
    if user.role_id == 1:
        await message.answer(text=text, reply_markup=main_panel_admin)
    elif user.role_id == 3:
        await message.answer(text=text, reply_markup=main_panel_master)
    else:
        await message.answer(text=text, reply_markup=main_panel)

    text = f'–Ø –º–æ–≥—É:\n' \
           f'üßê –ø–æ–∫–∞–∑–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é –∏–≥—Ä –∫–ª—É–±–∞;\n' \
           f'üòç –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å —Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –∏ –ø–æ–º–æ—á—å –Ω–∞ –Ω–∏—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è;\n' \
           f'üé≤ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∏—Ö —á–µ–ª–µ–Ω–æ–≤ –∫–ª—É–±–∞, –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–æ–±–æ–π –∏–≥—Ä—É,\n' \
           f'ü§© –ø—Ä–∏ —ç—Ç–æ–º —Ç—ã —Å–∞–º –≤—ã–±–∏—Ä–∞–µ—à—å –¥–µ–Ω—å –∏ –≤—Ä–µ–º—è\n' \
           f'ü•≥ –ø–æ–º–æ—á—å –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É –¥–ª—è —Ç–≤–æ–µ–π –≤–µ—á–µ—Ä–∏–Ω–∫–∏ –∏–ª–∏ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è.\n'
    if user.role_id == 1:
        await message.answer(text=text, reply_markup=await admin_start_panel())
    elif user.role_id == 3:
        await message.answer(text=text, reply_markup=await master_start_panel())
    else:
        await message.answer(text=text, reply_markup=await user_start_panel())
